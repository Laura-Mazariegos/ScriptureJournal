@page
@model RazorPagesMovie.Pages.Movies.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h2>Scripture Journal</h2>

<p>
    <a asp-page="Create">Create New</a>
</p>

<form>
    <p>
        Chapter: <select asp-for="MovieGenre" asp-items="Model.Genres">
            <option value="">All</option>
        </select>
        
        Book Name: <input type="text" asp-for="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.MovieSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Movie[0].Book)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Movie[0].LogDate)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movie[0].Chapter)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movie[0].Scripture)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movie[0].Notes)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Movie)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Book)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LogDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Chapter)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Scripture)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Notes)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.ID" style="color:red">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.ID" style="color:darkorange">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.ID"style="color:midnightblue">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.Movie.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Movie.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Movie.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Movie.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-default @nextDisabled">
    Next
</a>